<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - 分类 - shun-sfoo&#39;s blog</title>
        <link>https://shun-sfoo.github.io/categories/java/</link>
        <description>Java - 分类 - shun-sfoo&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 28 Dec 2020 15:29:41 &#43;0800</lastBuildDate><atom:link href="https://shun-sfoo.github.io/categories/java/" rel="self" type="application/rss+xml" /><item>
    <title>数据结构-avl树</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/avl/</link>
    <pubDate>Mon, 28 Dec 2020 15:29:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/avl/</guid>
    <description><![CDATA[平衡二叉树和 AVL 树 对于任意一个节点，左子树和右子树的高度差不能超过 1 平衡二叉树的高度和节点数量之间的关系也是 O(logn)的 平衡因子 判断一棵树]]></description>
</item><item>
    <title>数据结构-并查集</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/unionfind/</link>
    <pubDate>Sat, 26 Dec 2020 13:19:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/unionfind/</guid>
    <description><![CDATA[解决连接问题 数据结构 public class UnionFind implements UF { // rank[i]表示以i为根的集合所表示的树的层数 // 在后续的代码中, 并不会维护rank的语意, 也就是rank]]></description>
</item><item>
    <title>数据结构-线段树</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/segmenttree/</link>
    <pubDate>Wed, 23 Dec 2020 20:36:10 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/segmenttree/</guid>
    <description><![CDATA[线段树 线段树是算法竞赛中常用的用来维护 区间信息 的数据结构。 线段树可以在log(n)的时间复杂度内实现单点修改、 区间修改、区间查询（区间求和，]]></description>
</item><item>
    <title>数据结构-堆</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/heap/</link>
    <pubDate>Tue, 22 Dec 2020 16:24:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/heap/</guid>
    <description><![CDATA[堆的基本结构 二叉堆 (Binary Heap) 二叉堆是一颗完全二叉树（把元素顺序排列成树的形状） 堆中每个节点的值总是不大于其父节点的值 （最大堆） 用数组储存二叉堆 parent(i) =]]></description>
</item><item>
    <title>数据结构-二分搜索树</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/bst/</link>
    <pubDate>Sat, 19 Dec 2020 17:06:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/bst/</guid>
    <description><![CDATA[二叉树 二叉树具有唯一根节点 二叉树每个节点最多有两个孩子 二叉树每个节点最多有一个父亲 二叉树具有天然的递归结构 每个节点的左右子树都是二叉树 二叉树]]></description>
</item><item>
    <title>数据结构-链表</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/linkedlist/</link>
    <pubDate>Wed, 16 Dec 2020 16:37:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/linkedlist/</guid>
    <description><![CDATA[linkedList 真正的动态数据结构 最简单的动态数据结构 更深入的理解引用（或者指针） 更深入的理解递归 辅助组成其他数据结构 优点：真正的动态，不需要处理固定容量]]></description>
</item><item>
    <title>数据结构-栈、队列</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/stackandqueue/</link>
    <pubDate>Fri, 11 Dec 2020 21:57:46 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/stackandqueue/</guid>
    <description><![CDATA[Stack 栈也是一种线性结构 相比数组，栈对应的操作是数组的子集 只能从一段添加元素，也只能从一段取出元素 这一端称为栈顶 栈是一种 后进先出 的数据结构 Last In First]]></description>
</item><item>
    <title>JVM-3 Java 虚拟机内存结构</title>
    <link>https://shun-sfoo.github.io/posts/jvm/jvm03/</link>
    <pubDate>Fri, 11 Dec 2020 11:30:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/jvm/jvm03/</guid>
    <description><![CDATA[运行时数据区 在 《Java 虚拟机规范》中用的是「运行时数据区」这个术语。但很多时候并不是很形象。 再加上日积月累的习惯，都习惯用虚拟机内存结构这]]></description>
</item><item>
    <title>数据结构-数组</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/array/</link>
    <pubDate>Thu, 10 Dec 2020 21:13:46 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/array/</guid>
    <description><![CDATA[定义 在 Java 中数组定义为承载某种类型元素可重复集合。 数据结构 public class Array&lt;E&gt; { /** * 数组内容 */ private E[] data; /** * 数组中元素的个数 */ private int size; } capacity 为数据的容量。 主要方法 添]]></description>
</item><item>
    <title>JVM-2 字节码</title>
    <link>https://shun-sfoo.github.io/posts/jvm/jvm02/</link>
    <pubDate>Wed, 09 Dec 2020 16:31:13 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/jvm/jvm02/</guid>
    <description><![CDATA[Java 虚拟机规范 《Java 虚拟机规范》规定了 Java 虚拟机结构、Class 类文件结构、字节码指令等内容。 字节码文件结构是一组以 8 位字节为基础的二进制流]]></description>
</item></channel>
</rss>
