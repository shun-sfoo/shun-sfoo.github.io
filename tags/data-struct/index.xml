<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>data-struct - 标签 - shun-sfoo&#39;s blog</title>
        <link>https://shun-sfoo.github.io/tags/data-struct/</link>
        <description>data-struct - 标签 - shun-sfoo&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 19 Dec 2020 17:06:28 &#43;0800</lastBuildDate><atom:link href="https://shun-sfoo.github.io/tags/data-struct/" rel="self" type="application/rss+xml" /><item>
    <title>数据结构-二分搜索树</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/bst/</link>
    <pubDate>Sat, 19 Dec 2020 17:06:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/bst/</guid>
    <description><![CDATA[二叉树 二叉树具有唯一根节点 二叉树每个节点最多有两个孩子 二叉树每个节点最多有一个父亲 二叉树具有天然的递归结构 每个节点的左右子树都是二叉树 二叉树]]></description>
</item><item>
    <title>数据结构-链表</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/linkedlist/</link>
    <pubDate>Wed, 16 Dec 2020 16:37:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/linkedlist/</guid>
    <description><![CDATA[linkedList 真正的动态数据结构 最简单的动态数据结构 更深入的理解引用（或者指针） 更深入的理解递归 辅助组成其他数据结构 优点：真正的动态，不需要处理固定容量]]></description>
</item><item>
    <title>数据结构-栈、队列</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/stackandqueue/</link>
    <pubDate>Fri, 11 Dec 2020 21:57:46 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/stackandqueue/</guid>
    <description><![CDATA[Stack 栈也是一种线性结构 相比数组，栈对应的操作是数组的子集 只能从一段添加元素，也只能从一段取出元素 这一端称为栈顶 栈是一种 后进先出 的数据结构 Last In First]]></description>
</item><item>
    <title>数据结构-数组</title>
    <link>https://shun-sfoo.github.io/posts/data-struct/array/</link>
    <pubDate>Thu, 10 Dec 2020 21:13:46 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shun-sfoo.github.io/posts/data-struct/array/</guid>
    <description><![CDATA[定义 在 Java 中数组定义为承载某种类型元素可重复集合。 数据结构 public class Array&lt;E&gt; { /** * 数组内容 */ private E[] data; /** * 数组中元素的个数 */ private int size; } capacity 为数据的容量。 主要方法 添]]></description>
</item></channel>
</rss>
